describe("jasmine.MultiReporter",function(){var e,t,n;beforeEach(function(){e=new jasmine.MultiReporter,t=jasmine.createSpyObj("fakeReporter1",["reportSpecResults"]),n=jasmine.createSpyObj("fakeReporter2",["reportSpecResults","reportRunnerStarting"]),e.addReporter(t),e.addReporter(n)}),it("should support all the method calls that jasmine.Reporter supports",function(){var t={};e.addReporter(t),this.addMatchers({toDelegateMethod:function(e){return t[e]=jasmine.createSpy(e),this.actual[e]("whatever argument"),t[e].wasCalled&&t[e].mostRecentCall.args.length==1&&t[e].mostRecentCall.args[0]=="whatever argument"}}),expect(e).toDelegateMethod("reportRunnerStarting"),expect(e).toDelegateMethod("reportRunnerResults"),expect(e).toDelegateMethod("reportSuiteResults"),expect(e).toDelegateMethod("reportSpecStarting"),expect(e).toDelegateMethod("reportSpecResults"),expect(e).toDelegateMethod("log")}),it("should delegate to any and all subreporters",function(){e.reportSpecResults("blah","foo"),expect(t.reportSpecResults).toHaveBeenCalledWith("blah","foo"),expect(n.reportSpecResults).toHaveBeenCalledWith("blah","foo")}),it("should quietly skip delegating to any subreporters which lack the given method",function(){e.reportRunnerStarting("blah","foo"),expect(n.reportRunnerStarting).toHaveBeenCalledWith("blah","foo")})});