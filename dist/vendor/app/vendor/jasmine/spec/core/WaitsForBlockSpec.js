describe("WaitsForBlock",function(){var e,t,n,r,i,s,o;beforeEach(function(){e=new jasmine.Env,e.updateInterval=0,t=new jasmine.Suite(e,"suite 1"),n=1e3,r=new jasmine.Spec(e,t),i="some error message",s=jasmine.createSpy("onComplete")}),describe("jasmine.VERBOSE",function(){var t;beforeEach(function(){t=jasmine.VERBOSE,spyOn(e.reporter,"log")}),it("do not show information if jasmine.VERBOSE is set to false",function(){jasmine.VERBOSE=!1;var o=function(){return!0},u=new jasmine.WaitsForBlock(e,n,o,i,r);expect(e.reporter.log).not.toHaveBeenCalled(),u.execute(s),expect(e.reporter.log).not.toHaveBeenCalled(),jasmine.VERBOSE=t}),it("show information if jasmine.VERBOSE is set to true",function(){jasmine.VERBOSE=!0;var o=function(){return!0},u=new jasmine.WaitsForBlock(e,n,o,i,r);expect(e.reporter.log).not.toHaveBeenCalled(),u.execute(s),expect(e.reporter.log).toHaveBeenCalled(),jasmine.VERBOSE=t})}),it("onComplete should be called if the latchFunction returns true",function(){var t=function(){return!0},o=new jasmine.WaitsForBlock(e,n,t,i,r);expect(s).not.toHaveBeenCalled(),o.execute(s),expect(s).toHaveBeenCalled()}),it("latchFunction should run in same scope as spec",function(){var t,o=function(){t=this.scopedValue};r.scopedValue="foo";var u=new jasmine.WaitsForBlock(e,n,o,i,r);u.execute(s),expect(t).toEqual("foo")}),it("should fail spec and call onComplete if there is an error in the latchFunction",function(){var t=jasmine.createSpy("latchFunction").andThrow("some error");spyOn(r,"fail");var o=new jasmine.WaitsForBlock(e,n,t,i,r);o.execute(s),expect(r.fail).toHaveBeenCalledWith("some error"),expect(s).toHaveBeenCalled()}),describe("if latchFunction returns false",function(){var t,o;beforeEach(function(){t=jasmine.createSpy("latchFunction").andReturn(!1),o=new jasmine.FakeTimer,e.setTimeout=o.setTimeout,e.clearTimeout=o.clearTimeout,e.setInterval=o.setInterval,e.clearInterval=o.clearInterval}),it("latchFunction should be retried after 10 ms",function(){var u=new jasmine.WaitsForBlock(e,n,t,i,r);expect(t).not.toHaveBeenCalled(),u.execute(s),expect(t.callCount).toEqual(1),o.tick(5),expect(t.callCount).toEqual(1),o.tick(5),expect(t.callCount).toEqual(2)}),it("onComplete should be called if latchFunction returns true before timeout",function(){var u=new jasmine.WaitsForBlock(e,n,t,i,r);expect(s).not.toHaveBeenCalled(),u.execute(s),expect(s).not.toHaveBeenCalled(),t.andReturn(!0),o.tick(100),expect(s).toHaveBeenCalled()}),it("spec should fail with the passed message if the timeout is reached (and not call onComplete)",function(){spyOn(r,"fail");var u=new jasmine.WaitsForBlock(e,n,t,i,r);u.execute(s),expect(r.fail).not.toHaveBeenCalled(),o.tick(n),expect(r.fail).toHaveBeenCalled();var a=r.fail.mostRecentCall.args[0].message;expect(a).toMatch(i),expect(s).toHaveBeenCalled()})})});