jasmine.FakeTimer=function(){this.reset();var e=this;e.setTimeout=function(t,n){return e.timeoutsMade++,e.scheduleFunction(e.timeoutsMade,t,n,!1),e.timeoutsMade},e.setInterval=function(t,n){return e.timeoutsMade++,e.scheduleFunction(e.timeoutsMade,t,n,!0),e.timeoutsMade},e.clearTimeout=function(t){e.scheduledFunctions[t]=jasmine.undefined},e.clearInterval=function(t){e.scheduledFunctions[t]=jasmine.undefined}},jasmine.FakeTimer.prototype.reset=function(){this.timeoutsMade=0,this.scheduledFunctions={},this.nowMillis=0},jasmine.FakeTimer.prototype.tick=function(e){var t=this.nowMillis,n=t+e;this.runFunctionsWithinRange(t,n),this.nowMillis=n},jasmine.FakeTimer.prototype.runFunctionsWithinRange=function(e,t){var n,r=[];for(var i in this.scheduledFunctions)n=this.scheduledFunctions[i],n!=jasmine.undefined&&n.runAtMillis>=e&&n.runAtMillis<=t&&(r.push(n),this.scheduledFunctions[i]=jasmine.undefined);if(r.length>0){r.sort(function(e,t){return e.runAtMillis-t.runAtMillis});for(var s=0;s<r.length;++s)try{var o=r[s];this.nowMillis=o.runAtMillis,o.funcToCall(),o.recurring&&this.scheduleFunction(o.timeoutKey,o.funcToCall,o.millis,!0)}catch(u){}this.runFunctionsWithinRange(e,t)}},jasmine.FakeTimer.prototype.scheduleFunction=function(e,t,n,r){this.scheduledFunctions[e]={runAtMillis:this.nowMillis+n,funcToCall:t,recurring:r,timeoutKey:e,millis:n}},jasmine.Clock={defaultFakeTimer:new jasmine.FakeTimer,reset:function(){jasmine.Clock.assertInstalled(),jasmine.Clock.defaultFakeTimer.reset()},tick:function(e){jasmine.Clock.assertInstalled(),jasmine.Clock.defaultFakeTimer.tick(e)},runFunctionsWithinRange:function(e,t){jasmine.Clock.defaultFakeTimer.runFunctionsWithinRange(e,t)},scheduleFunction:function(e,t,n,r){jasmine.Clock.defaultFakeTimer.scheduleFunction(e,t,n,r)},useMock:function(){if(!jasmine.Clock.isInstalled()){var e=jasmine.getEnv().currentSpec;e.after(jasmine.Clock.uninstallMock),jasmine.Clock.installMock()}},installMock:function(){jasmine.Clock.installed=jasmine.Clock.defaultFakeTimer},uninstallMock:function(){jasmine.Clock.assertInstalled(),jasmine.Clock.installed=jasmine.Clock.real},real:{setTimeout:jasmine.getGlobal().setTimeout,clearTimeout:jasmine.getGlobal().clearTimeout,setInterval:jasmine.getGlobal().setInterval,clearInterval:jasmine.getGlobal().clearInterval},assertInstalled:function(){if(!jasmine.Clock.isInstalled())throw new Error("Mock clock is not installed, use jasmine.Clock.useMock()")},isInstalled:function(){return jasmine.Clock.installed==jasmine.Clock.defaultFakeTimer},installed:null},jasmine.Clock.installed=jasmine.Clock.real,jasmine.getGlobal().setTimeout=function(e,t){return jasmine.Clock.installed.setTimeout.apply?jasmine.Clock.installed.setTimeout.apply(this,arguments):jasmine.Clock.installed.setTimeout(e,t)},jasmine.getGlobal().setInterval=function(e,t){return jasmine.Clock.installed.setInterval.apply?jasmine.Clock.installed.setInterval.apply(this,arguments):jasmine.Clock.installed.setInterval(e,t)},jasmine.getGlobal().clearTimeout=function(e){return jasmine.Clock.installed.clearTimeout.apply?jasmine.Clock.installed.clearTimeout.apply(this,arguments):jasmine.Clock.installed.clearTimeout(e)},jasmine.getGlobal().clearInterval=function(e){return jasmine.Clock.installed.clearTimeout.apply?jasmine.Clock.installed.clearInterval.apply(this,arguments):jasmine.Clock.installed.clearInterval(e)};